(function(s,c){typeof exports=="object"&&typeof module<"u"?c(exports):typeof define=="function"&&define.amd?define(["exports"],c):(s=typeof globalThis<"u"?globalThis:s||self,c(s.SRPServer={}))})(this,function(s){"use strict";function c(e){return e<0n&&(e*=-1n),e}function y(e,t){if(e===0n)return{g:t,x:0n,y:1n};{let{g:n,x:r,y:i}=y(t%e,e);return{g:n,x:i-t/e*r,y:r}}}function u(e,t){if(t<=0n)throw new Error("m must be > 0");const n=e%t;return n<0n?n+t:n}function U(e,t){return u(e,t)}function N(e,t){const n=y(u(e,t),t);if(n.g!==1n)throw new Error("Modular inverse does not exist");return u(n.x,t)}function v(e){return e%2n===1n}function f(e,t,n){if(n===0n)throw new Error("Cannot modPow with modulus 0");if(t===0n)return 1n;if(e=u(e,n),t<0n)return N(f(e,c(t),n),n);let r=1n;for(;t>0n;){if(e===0n)return 0n;v(t)&&(r=r*e%n),t=t/2n,e=e*e%n}return r}function I(e){if(typeof process=="object"&&typeof require=="function"){const{randomBytes:t}=require("crypto");return new Uint8Array(t(e))}else{const t=new Uint8Array(e);return window.crypto.getRandomValues(t),t}}function L(e){return e.length%2!==0&&(e="0"+e),e}function g(e,t=!1){let n=e.toString(16);return t?L(n):n}function H(e){return g(e,!0)}function R(e){const t=e.length/2,n=new Uint8Array(t);for(let r=0,i=0;r<t;r++,i+=2)n[r]=parseInt(e.slice(i,i+2),16);return n}function w(e,t=!1){if(e<0n)if(t){const r=1n<<(BigInt(e.toString(2).length)/8n+1n)*8n;e+=r}else throw new Error("BigInt should larger than 0 to convert to Uint8Array");return R(H(e))}function S(e){const t=e.startsWith("-");t&&(e=e.substring(1));let n=BigInt("0x"+e);return t?-n:n}function h(e,t=10){if(typeof e=="bigint")return e;if(typeof e=="number"||t===10)return BigInt(e);if(t===16)return S(e);{let n=0n;for(let r=0;r<e.length;r++){const i=parseInt(e[r],t);if(isNaN(i))throw new Error("Invalid character for base: "+t);n=n*BigInt(t)+BigInt(i)}return n}}function p(e,t=!1){let n=0n;const r=t&&(e[0]&128)!==0;if(r){for(let o=0;o<e.length;o++)e[o]=~e[o]&255;let i=1;for(let o=e.length-1;o>=0&&i>0;o--){const a=e[o]+i;e[o]=a&255,i=a>>8}}for(let i=0;i<e.length;i++)n=(n<<8n)+BigInt(e[i]);return r?-n:n}function x(e,t=!1){return g(p(e,t))}class k extends Error{}const E=21766174458617435773191008891802753781907668374255538511144643224689886235383840957210909013086056401571399717235807266581649606472148410291413364152197364477180887395655483738115072677402235101762521901569820740293149529620419333266262073471054548368736039519702486226506248861060256971802984953561121442680157668000761429988222457090413873973970171927093992114751765168063614761119615476233422096442783117971236371647333871414335895773474667308967050807005509320424799678417036867928316761272274230314067548291133582479583061439577559347101961771406173684378522703483495337037655006751328447510550299250924469288819n,A=2n,T=h("5b9e8ef059c6b32ea59fc1d322d37f04aa30bae5aa9003b8321e21ddb04e300",16);function q(e){return S(e)}function C(e,t=!1){return g(e,t)}function B(e,t){if(P()){const{timingSafeEqual:a}=require("crypto");return a(l(e),l(t))}const n=String(e);let r=String(t);const i=n.length;let o=0;i!==r.length&&(r=n,o=1);for(let a=0;a<i;a++)o|=n.charCodeAt(a)^r.charCodeAt(a);return o===0}function P(){return typeof window>"u"}function l(e){let t;return typeof window>"u"?t=Buffer.from(e,"utf-8"):t=new TextEncoder().encode(e),t}function M(...e){let t=e.reduce((i,o)=>i+o.byteLength,0),n=new Uint8Array(t),r=0;for(let i of e)n.set(new Uint8Array(i),r),r+=i.byteLength;return n}class _{constructor(t,n,r){this.prime=t,this.generator=n,this.key=r,this.length=256/8}setHasher(t){return this.hasher=t,this}async generateRandomSecret(){return p(I(this.getLength()))}getLength(){return this.length}setLength(t){return this.length=t,this}setSize(t){return this.setLength(Math.floor(t/8))}async generateCommonSecret(t,n){return this.checkNotEmpty(t,"A"),this.checkNotEmpty(n,"B"),this.hash(this.pad(t),this.pad(n))}async generateClientSessionProof(t,n,r,i,o){return await this.hash(await this.hash(this.getPrime())^await this.hash(this.getGenerator()),await this.hash(t),n,r,i,o)}async generateServerSessionProof(t,n,r){return this.hash(t,n,r)}getPrime(){return this.prime}getGenerator(){return this.generator}getKey(){return this.key}async hash(...t){const n=t.map(i=>typeof i=="bigint"?w(i):l(i)),r=await this.hashToString(M(...n));return h(r,16)}async hashToString(t){let n=this.hasher;typeof n=="string"&&(n=this.getHasherByName(n));let r=await n(t,this.getLength());return r instanceof Uint8Array&&(r=x(r)),r}getHasherByName(t){return t=t.toLowerCase(),async n=>{if(P()){const{createHash:r}=require("crypto");return new Uint8Array(Buffer.from(r(t).update(Buffer.from(n)).digest("hex"),"hex"))}switch(t){case"sha1":return new Uint8Array(await crypto.subtle.digest("SHA-1",n));case"sha256":return new Uint8Array(await crypto.subtle.digest("SHA-256",n));case"sha384":return new Uint8Array(await crypto.subtle.digest("SHA-384",n));case"sha512":return new Uint8Array(await crypto.subtle.digest("SHA-512",n))}throw new Error("Available hasher not found.")}}checkNotEmpty(t,n){if(!t)throw new Error(`Value: \`${n}\` should not be empty.`);if(typeof t=="bigint"&&t===0n)throw new Error(`Value: \`${n}\` should not be zero.`)}pad(t){const n=this.intToBytes(this.getPrime()).length,i=t.toString(16).padStart(n,"0");return BigInt("0x"+i)}intToBytes(t){return new TextDecoder().decode(w(t))}timingSafeEquals(t,n){return B(t,n)}}class D extends _{static create(t=void 0,n=void 0,r=void 0){return t??(t=E),n??(n=A),r??(r=T),new this(h(t,16),h(n,16),h(r,16))}async step1(t,n,r){this.checkNotEmpty(t,"identity"),this.checkNotEmpty(n,"salt"),this.checkNotEmpty(r,"verifier");const i=await this.generateRandomSecret(),o=await this.generatePublic(i,r);return{secret:i,public:o}}async step2(t,n,r,i,o,a,b){this.checkNotEmpty(i,"A"),this.checkNotEmpty(b,"M1");const F=await this.generateCommonSecret(i,a),G=await this.generatePreMasterSecret(i,o,r,F),d=await this.hash(G),m=await this.generateClientSessionProof(t,n,i,a,d);if(!this.timingSafeEquals(m.toString(),b.toString()))throw new k("Invalid client session proof.");const K=await this.generateServerSessionProof(i,m,d);return{key:d,proof:K}}generatePublic(t,n){const r=this.getPrime();return U(this.getKey()*n+f(this.getGenerator(),t,r),r)}generatePreMasterSecret(t,n,r,i){const o=this.getPrime();return f(f(r,i,o)*t,n,o)}}s.DEFAULT_GENERATOR=A,s.DEFAULT_KEY=T,s.DEFAULT_PRIME=E,s.bigintToHex=C,s.default=D,s.hexToBigint=q,s.timingSafeEquals=B,Object.defineProperty(s,"__esModule",{value:!0})});
//# sourceMappingURL=server.min.js.map
